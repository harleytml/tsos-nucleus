on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

name: Compile And Release

jobs:
  clean-releases:
    runs-on: ubuntu-latest
    steps:
      - uses: dev-drprasad/delete-older-releases@v0.2.0
        name: Delete Older Releases
        with:
          keep_latest: 0
          repo: ""
          delete_tags: true
          delete_tag_pattern: a
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  canon-a1100-test:
    needs: [clean-releases]
    runs-on: ubuntu-latest
    container:
      image: tsukisuperior/tsos-build:latest
    steps:
      - uses: actions/checkout@v2
      - name: Compile Test
        run: PATH=$PATH:/usr/tsos-toolchain/bin && cd $GITHUB_WORKSPACE && python3 ./build.py canon-a1100

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: canon-a1100-${{ github.run_number }}-${{ github.run_id }}
          release_name: Release CANON-A1100
          draft: false
          prerelease: true
          body: |
            Check commits for changes

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus
          asset_name: nucleus
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus.elf
          asset_name: nucleus.elf
          asset_content_type: application/zip
  cubieboard1-test:
    needs: [clean-releases]
    runs-on: ubuntu-latest
    container:
      image: tsukisuperior/tsos-build:latest
    steps:
      - uses: actions/checkout@v2
      - name: Compile Test
        run: PATH=$PATH:/usr/tsos-toolchain/bin && cd $GITHUB_WORKSPACE && python3 ./build.py cubieboard1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: cubieboard1-${{ github.run_number }}-${{ github.run_id }}
          release_name: Release CUBIEBOARD 1
          draft: false
          prerelease: true
          body: |
            Check commits for changes

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus
          asset_name: nucleus
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus.elf
          asset_name: nucleus.elf
          asset_content_type: application/zip
  nspire-test:
    needs: [clean-releases]
    runs-on: ubuntu-latest
    container:
      image: tsukisuperior/tsos-build:latest
    steps:
      - uses: actions/checkout@v2
      - name: Compile Test
        run: PATH=$PATH:/usr/tsos-toolchain/bin && cd $GITHUB_WORKSPACE && python3 ./build.py nspire

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nspire-${{ github.run_number }}-${{ github.run_id }}
          release_name: Release NSPIRE
          draft: false
          prerelease: true
          body: |
            Check commits for changes

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus
          asset_name: nucleus
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus.elf
          asset_name: nucleus.elf
          asset_content_type: application/zip
  pc-test:
    needs: [clean-releases]
    runs-on: ubuntu-latest
    container:
      image: tsukisuperior/tsos-build:latest
    steps:
      - uses: actions/checkout@v2
      - name: Compile Test
        run: PATH=$PATH:/usr/tsos-toolchain/bin && cd $GITHUB_WORKSPACE && python3 ./build.py pc

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: pc-${{ github.run_number }}-${{ github.run_id }}
          release_name: Release PC
          draft: false
          prerelease: true
          body: |
            Check commits for changes

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus
          asset_name: nucleus
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus.elf
          asset_name: nucleus.elf
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus.iso
          asset_name: nucleus.iso
          asset_content_type: application/zip
  rpi3-test:
    needs: [clean-releases]
    runs-on: ubuntu-latest
    container:
      image: tsukisuperior/tsos-build:latest
    steps:
      - uses: actions/checkout@v2
      - name: Compile Test
        run: PATH=$PATH:/usr/tsos-toolchain/bin && cd $GITHUB_WORKSPACE && python3 ./build.py rpi3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: rpi3-${{ github.run_number }}-${{ github.run_id }}
          release_name: Release RPI3
          draft: false
          prerelease: true
          body: |
            Check commits for changes

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus
          asset_name: nucleus
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/nucleus.elf
          asset_name: nucleus.elf
          asset_content_type: application/zip
